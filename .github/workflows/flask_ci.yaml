name: Flask CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pylint autopep8

      - name: Run autopep8 (fix)
        run: |
          autopep8 --in-place --aggressive --aggressive $(git ls-files '*.py')

      - name: Run Pylint
        run: |
          pylint $(git ls-files '*.py')

      - name: Commit and push if changes were made
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git fetch origin
          git checkout dev
          git merge origin/dev
          git add .
          git diff-index --quiet HEAD || git commit -m "Auto-format code with autopep8"
          git push origin dev
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U ${{ secrets.POSTGRES_USER }}" 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Set up PostgreSQL
        run: |
          sudo apt-get install -y libpq-dev
          export DATABASE_URL="postgresql+psycopg2://${{ secrets.POSTGRES_USER }}:${{ secrets.POSTGRES_PASSWORD }}@localhost:5432/${{ secrets.POSTGRES_DB }}"
          export SECRET_KEY="${{ secrets.SECRET_KEY }}"

      - name: Run tests
        run: |
          python -m unittest discover -s tests
          export DATABASE_URL="postgresql+psycopg2://${{ secrets.POSTGRES_USER }}:${{ secrets.POSTGRES_PASSWORD }}@localhost:5432/${{ secrets.POSTGRES_DB }}"
          export SECRET_KEY="${{ secrets.SECRET_KEY }}"
